---

- name: display OJVMDB patch conflict detection message
  debug:
    msg: [ "Running DB patch conflict detection for {{ oracle_manage_patches_db_patch.patchid }}/{{ oracle_manage_patches_db_patch.ojvm_patchid }} patchid.", "Logfile: {{ oracle_manage_patches_log_dir }}/db_home_oracle_homes.p{{ oracle_manage_patches_db_patch.ojvm_patchid }}.opatch.CheckConflictAgainstOHWithDetail.TIMESTAMP.log.", "Please wait .." ]
  when: oracle_manage_patches_conflict_detection
  tags:
    - oracle_manage_patches_ojvmdb_conflict_detection_message
    - oracle_manage_patches_ojvmdb_conflict_detection

- name: OJVMDB patch conflict detection
  shell: |
    cd {{ oracle_manage_patches_stage_install_dir }}/{{ oracle_manage_patches_db_patch.patchid }}/{{ oracle_manage_patches_db_patch.ojvm_patchid }} ;
    $ORACLE_HOME/OPatch/opatch prereq CheckConflictAgainstOHWithDetail -ph ./ | tee {{ oracle_manage_patches_log_dir }}/db.p{{ oracle_manage_patches_db_patch.ojvm_patchid }}.opatch_prereq_CheckConflictAgainstOHWithDetail.$(date +%Y-%m-%d_%H%M%S).log
  environment:
    ORACLE_HOME: '{{ _oracle_manage_patches_oh_item.oracle_home }}'
  check_mode: no
  ignore_errors: yes
  register: _oracle_manage_patches_conflict_detection_output
  delegate_to: '{{ _oracle_manage_patches_host_patch_item }}'
  with_items:
    - "{{ oracle_manage_patches_rac_remote_nodes + [ inventory_hostname ] }}"
  loop_control:
    loop_var: _oracle_manage_patches_host_patch_item
    label: "[conflict detection for {{ oracle_manage_patches_db_patch.patchid }}/{{ oracle_manage_patches_db_patch.ojvm_patchid }} patchid; logfile: {{ oracle_manage_patches_log_dir }}/db.p{{ oracle_manage_patches_db_patch.ojvm_patchid }}.opatch_prereq_CheckConflictAgainstOHWithDetail.TIMESTAMP.log]"
  when: oracle_manage_patches_conflict_detection
  tags:
    - oracle_manage_patches_ojvmdb_conflict_detection

- include_tasks: display_stdout_lines_or_fail.yml
  vars:
    _oracle_manage_patches_debug: '{{ _oracle_manage_patches_output_item }}'
  with_items:
    - "{{ _oracle_manage_patches_conflict_detection_output.results|default([],true) }}"
  loop_control:
    loop_var: _oracle_manage_patches_output_item
    label: "[host: {{ _oracle_manage_patches_output_item._oracle_manage_patches_host_patch_item }}]"
  when: oracle_manage_patches_display_db_conflict_detection_output or _oracle_manage_patches_output_item.rc|default(0,true) != 0 or _oracle_manage_patches_output_item.stderr|default('',true) != ''
  tags:
    - oracle_manage_patches_ojvmdb_conflict_detection

- name: display OJVMDB patch installation message
  debug:
    msg: [ "Patching OJVMDB Oracle Database Homes for {{ oracle_manage_patches_db_patch.patchid }}/{{ oracle_manage_patches_db_patch.ojvm_patchid }} patchid.", "Logfile: {{ oracle_manage_patches_log_dir }}/db.p{{ oracle_manage_patches_db_patch.ojvm_patchid }}.opatch_apply.TIMESTAMP.log", "Please wait .." ]
  when: not ansible_check_mode and oracle_manage_patches_patch_installation 
  tags:
    - oracle_manage_patches_ojvmdb_patch_installation_message
    - oracle_manage_patches_ojvmdb_patch_installation

- name: DB patch installation
  shell: |
    cd {{ oracle_manage_patches_stage_install_dir }}/{{ oracle_manage_patches_db_patch.patchid }}/{{ oracle_manage_patches_db_patch.ojvm_patchid }} ;
    $ORACLE_HOME/OPatch/opatch apply {{ oracle_manage_patches_local_config }} -silent -ocmrf {{ oracle_manage_patches_stage_install_dir }}/ocm.rsp | tee {{ oracle_manage_patches_log_dir }}/db.p{{ oracle_manage_patches_db_patch.ojvm_patchid }}.opatch_apply.$(date +%Y-%m-%d_%H%M%S).log
  environment:
    ORACLE_HOME: '{{ _oracle_manage_patches_oh_item.oracle_home }}'
  ignore_errors: yes
  register: _oracle_manage_patches_patch_installation_output
  delegate_to: '{{ _oracle_manage_patches_host_patch_item }}'
  with_items:
    - "{{ oracle_manage_patches_rac_remote_nodes + [ inventory_hostname ] }}"
  loop_control:
    loop_var: _oracle_manage_patches_host_patch_item
    label: "[Patch installation for {{ oracle_manage_patches_db_patch.patchid }}/{{ oracle_manage_patches_db_patch.ojvm_patchid }} patchid; logfile: {{ oracle_manage_patches_log_dir }}/db.p{{ oracle_manage_patches_db_patch.ojvm_patchid }}.opatch_apply.TIMESTAMP.log]"
  when: oracle_manage_patches_patch_installation
  tags:
    - oracle_manage_patches_ojvmdb_patch_installation

- include_tasks: display_stdout_lines_or_fail_on_missing_string.yml
  vars:
    _oracle_manage_patches_debug: '{{ _oracle_manage_patches_output_item }}'
    _oracle_manage_patches_on_success_string: 'Patch {{ oracle_manage_patches_db_patch.ojvm_patchid }} successfully applied'
  with_items:
    - "{{ _oracle_manage_patches_patch_installation_output.results|default([],true) }}"
  loop_control:
    loop_var: _oracle_manage_patches_output_item
    label: "[host: {{ _oracle_manage_patches_output_item._oracle_manage_patches_host_patch_item }}]"
  when:
    - not ansible_check_mode
    - oracle_manage_patches_patch_installation
    - (oracle_manage_patches_display_opatchauto_apply_output or _oracle_manage_patches_output_item.rc|default(0,true) != 0 or _oracle_manage_patches_output_item.stderr|default('',true) != '')
  tags:
    - oracle_manage_patches_ojvmdb_patch_installation


